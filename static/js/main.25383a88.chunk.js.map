{"version":3,"sources":["Components/Phonebook/style.module.css","Components/Container/style.module.css","Components/form/style.module.css","Components/Container/continer.js","Components/form/form.js","Components/filter/filter.js","Components/Phonebook/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","style","Form","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","styles","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","type","onChange","TaskEditor_button","Component","Filter","onChangeFilter","ContactList","contacts","onRemoveContact","TaskList","map","contact","TaskList_item","TaskList_button","onClick","id","App","filter","addContact","task","cont","includes","alert","length","shortid","generate","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25383a88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"style_TaskList__1HR45\",\"TaskList_item\":\"style_TaskList_item__1soKl\",\"completed\":\"style_completed__1tenL\",\"TaskList_text\":\"style_TaskList_text__3N0Wb\",\"TaskList_actions\":\"style_TaskList_actions__37jUQ\",\"TaskList_button\":\"style_TaskList_button__38u8K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__UXYgR\",\"button\":\"style_button__2EsI5\",\"active\":\"style_active__3fzit\",\"disabled\":\"style_disabled__3FcXB\",\"title\":\"style_title__1d52v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"style_TaskEditor__FS16z\",\"TaskEditor_label\":\"style_TaskEditor_label__1RzXS\",\"TaskEditor_input\":\"style_TaskEditor_input__4iV69\",\"TaskEditorinput\":\"style_TaskEditorinput__2vMRr\",\"TaskEditor_button\":\"style_TaskEditor_button__WboyL\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"../Container/style.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={style.Container}>{children}</div>\n);\n\nexport default Container;\n\nContainer.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./style.module.css\";\n\nexport default class Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact({ ...this.state });\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\n        <label className={styles.TaskEditor_label}>\n          Name\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.TaskEditor_label}>\n          Number\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.TaskEditor_button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./style.module.css\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul className={styles.TaskList}>\n    {contacts.map((contact) => (\n      <li className={styles.TaskList_item} key={contact.id}>\n        {contact.name + \" : \" + contact.number}\n        {\n          <button\n            className={styles.TaskList_button}\n            type=\"button\"\n            name=\"delte\"\n            onClick={() => onRemoveContact(contact.id)}\n          >\n            delete\n          </button>\n        }\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","// import moduleName from './Components/input/';\nimport { Component } from \"react\";\nimport shortid from \"shortid\";\n\nimport Container from \"./Components/Container\";\nimport Form from \"./Components/form\";\nimport Filter from \"./Components/filter\";\nimport ContactList from \"./Components/Phonebook\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: shortid.generate(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <Container>\n          <h1>Phonebook</h1>\n          <Form onAddContact={this.addContact} />\n          <h2>Contacts</h2>\n\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}